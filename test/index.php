<?php

use LokiDb\Db;
use LokiDb\Query\Condition;
use LokiDb\Storage\FieldDefinition;
use LokiDb\Storage\Index;
use LokiDb\Storage\TableDefinition;

require_once __DIR__ . '/../vendor/autoload.php';
/*
$array = [
    554, 540, 360, 115, 578, 521, 3, 569, 275, 588, 96, 219, 891, 735, 165, 813, 901, 883, 637, 141, 916, 593, 222, 274, 337, 359, 389, 130, 846, 313, 603, 364, 537, 966, 634, 393, 587, 438, 408, 929, 910, 610, 237, 123, 480, 661, 218, 580, 832, 486, 118, 202, 797, 503, 478, 598, 350, 84, 639, 489, 254, 880, 909, 748, 246, 445, 183, 126, 669, 790, 40, 553, 253, 550, 820, 310, 520, 260, 584, 977, 296, 318, 328, 266, 640, 336, 765, 61, 308, 194, 122, 835, 794, 560, 793, 60, 609, 444, 656, 575, 363, 672, 425, 858, 119, 848, 295, 387, 693, 996, 33, 462, 525, 914, 416, 367, 740, 806, 862, 127, 400, 936, 927, 949, 463, 468, 433, 449, 837, 944, 476, 330, 853, 533, 718, 671, 958, 160, 976, 132, 201, 993, 962, 679, 973, 282, 339, 648, 875, 852, 822, 252, 12, 257, 599, 373, 457, 325, 230, 1000, 261, 685, 414, 620, 917, 700, 995, 988, 787, 581, 758, 814, 140, 887, 649, 24, 600, 830, 952, 381, 619, 199, 101, 48, 522, 137, 517, 585, 51, 627, 869, 278, 686, 986, 298, 410, 734, 843, 663, 841, 312, 651, 155, 565, 42, 398, 361, 311, 605, 668, 961, 712, 106, 809, 429, 997, 618, 258, 720, 562, 752, 413, 242, 577, 688, 903, 446, 422, 454, 675, 708, 276, 117, 309, 911, 743, 975, 340, 283, 379, 659, 456, 864, 904, 877, 730, 571, 166, 528, 94, 573, 589, 799, 608, 157, 342, 225, 200, 745, 652, 871, 811, 29, 383, 374, 624, 366, 967, 978, 728, 53, 231, 103, 285, 321, 187, 332, 286, 611, 855, 808, 632, 547, 455, 816, 934, 515, 872, 780, 277, 369, 347, 460, 175, 933, 473, 88, 147, 557, 214, 798, 421, 467, 167, 168, 354, 992, 592, 658, 523, 493, 204, 959, 30, 62, 701, 940, 531, 566, 516, 655, 228, 930, 777, 508, 817, 999, 85, 946, 8, 625, 405, 876, 327, 66, 16, 601, 868, 319, 889, 357, 892, 301, 906, 32, 459, 56, 249, 179, 248, 762, 538, 552, 133, 922, 795, 801, 800, 404, 67, 378, 974, 838, 2, 177, 306, 706, 895, 255, 423, 146, 71, 287, 229, 757, 497, 376, 782, 144, 741, 494, 470, 63, 731, 65, 894, 86, 684, 545, 52, 948, 145, 555, 766, 631, 825, 721, 963, 939, 399, 495, 151, 526, 392, 114, 714, 607, 644, 803, 861, 490, 786, 349, 98, 987, 184, 559, 465, 717, 789, 28, 687, 771, 331, 532, 829, 556, 453, 384, 35, 723, 662, 409, 303, 428, 104, 705, 153, 896, 882, 646, 900, 351, 727, 514, 677, 873, 415, 884, 44, 788, 264, 131, 733, 182, 932, 773, 90, 120, 772, 753, 377, 235, 519, 570, 665, 403, 411, 738, 548, 775, 290, 667, 164, 953, 482, 828, 898, 886, 507, 315, 18, 690, 161, 491, 25, 638, 150, 431, 534, 563, 968, 451, 72, 703, 506, 77, 192, 156, 779, 695, 590, 713, 73, 650, 148, 241, 938, 702, 981, 203, 46, 870, 719, 209, 643, 551, 31, 530, 152, 396, 776, 420, 263, 247, 546, 568, 881, 424, 163, 970, 5, 292, 430, 860, 791, 169, 851, 158, 676, 504, 856, 750, 475, 943, 681, 850, 957, 370, 121, 185, 443, 736, 341, 971, 709, 83, 836, 942, 273, 57, 857, 849, 394, 418, 527, 79, 754, 925, 208, 510, 178, 542, 626, 761, 233, 666, 641, 195, 612, 59, 154, 899, 783, 683, 279, 196, 989, 615, 984, 834, 704, 432, 107, 524, 74, 616, 352, 240, 947, 23, 928, 245, 280, 844, 567, 763, 434, 171, 251, 485, 232, 691, 256, 268, 931, 174, 583, 885, 756, 419, 34, 707, 596, 395, 180, 912, 458, 479, 91, 78, 197, 7, 481, 45, 905, 128, 329, 213, 211, 139, 173, 488, 913, 272, 897, 744, 38, 284, 238, 99, 448, 965, 696, 302, 333, 924, 725, 466, 879, 543, 464, 320, 749, 37, 220, 604, 170, 267, 55, 265, 205, 143, 439, 697, 221, 755, 969, 436, 190, 212, 982, 960, 579, 300, 234, 865, 365, 262, 355, 109, 692, 964, 116, 597, 722, 674, 206, 785, 919, 636, 188, 1, 217, 487, 193, 768, 991, 774, 854, 582, 845, 602, 513, 921, 288, 831, 243, 784, 972, 92, 746, 629, 372, 293, 345, 239, 874, 501, 847, 945, 227, 742, 920, 17, 664, 281, 82, 918, 810, 824, 69, 823, 541, 724, 956, 595, 492, 39, 70, 867, 15, 452, 244, 326, 304, 401, 802, 812, 710, 368, 113, 406, 299, 386, 111, 715, 614, 998, 43, 461, 878, 699, 50, 586, 198, 11, 698, 317, 324, 544, 628, 792, 764, 450, 471, 417, 135, 842, 4, 983, 951, 923, 778, 269, 498, 839, 815, 893, 390, 447, 770, 469, 572, 558, 343, 994, 689, 402, 576, 613, 226, 412, 134, 622, 539, 518, 483, 75, 561, 511, 673, 358, 49, 41, 191, 271, 112, 224, 821, 441, 819, 804, 499, 297, 100, 13, 888, 955, 505, 500, 334, 58, 529, 14, 236, 68, 827, 477, 759, 259, 645, 210, 323, 27, 54, 21, 670, 6, 979, 87, 950, 356, 64, 382, 371, 289, 307, 859, 223, 216, 833, 338, 564, 496, 935, 26, 215, 647, 907, 954, 335, 549, 397, 102, 863, 807, 623, 344, 181, 440, 159, 678, 162, 805, 442, 937, 941, 660, 176, 711, 737, 840, 353, 294, 149, 97, 124, 484, 633, 781, 890, 796, 621, 250, 435, 826, 291, 138, 437, 407, 20, 739, 653, 186, 19, 682, 769, 818, 142, 502, 726, 110, 391, 385, 630, 270, 635, 694, 680, 36, 93, 427, 314, 747, 426, 985, 362, 751, 125, 22, 472, 574, 348, 654, 760, 305, 95, 732, 375, 866, 9, 316, 47, 716, 322, 10, 105, 980, 76, 926, 207, 606, 535, 617, 657, 594, 908, 536, 729, 512, 129, 172, 902, 767, 136, 915, 89, 642, 189, 81, 474, 591, 346, 108, 380, 990, 509, 80, 388
];
$btree = new LokiDb\Btree($array);
$btree->Search(512);
exit;
*/

$lokiDb = new Db(__DIR__ . '/test_db');


$table = new TableDefinition(
    'users', [[
        'field' => 'user_name',
        'primary' => true,
        'sort' => Index::SORT_DESC
    ]]
);

$table->addField(
        'user_name',
        FieldDefinition::DATA_TYPE_STRING,
        16
    )->addField(
        'email',
        FieldDefinition::DATA_TYPE_STRING,
        64
    )->addField(
        'age',
        FieldDefinition::DATA_TYPE_INT
    )->addField(
        'is_active',
        FieldDefinition::DATA_TYPE_BOOL
    );

$lokiDb->createTable($table);

//$lokiDb->beginTransaction();


/*
$lokiDb
    ->createQuery()
    ->update('users')
    ->set(['user_name' => 'karl'])
    ->where(new Condition('age', '=', 1000))
    ->execute();


function createRandomString($iLen = 10, $sChars = null) {

    if ($sChars === null) {
        $sChars = array_merge( range('A','Z'), range('a','z'), range(0,9) );
    } else {
        $sChars = str_split($sChars);
    }

    $sRnd = '';
    for ($i = 0; $i < $iLen; $i++) {
        $sRnd .= $sChars[array_rand($sChars)];
    }

    return $sRnd;
}




for($i = 0; $i < 1000; $i++)
{
    $lokiDb
        ->createQuery()
        ->insert([
            'user_name' => createRandomString(),
            'email' => 'janet@domain.tld',
            'age' => rand(0, 100),
            'is_active' => false,
        ])
        ->into('users')
        ->execute();
}
*/

//$lokiDb->createQuery()->delete()->from('users')->where(new Condition('age','>', 90))->execute();












//$lokiDb->commit();



